# Generated by Django 4.2.4 on 2023-08-08 12:50

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_name', models.CharField(blank=True, max_length=256, null=True)),
                ('first_name', models.CharField(blank=True, max_length=256, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=256, null=True)),
                ('username', models.CharField(blank=True, max_length=256, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=128, unique=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('pfp', models.ImageField(blank=True, null=True, upload_to=accounts.models.upload_location_pfp)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=128, null=True)),
                ('phone_num', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='Phone Number')),
                ('zipcode', models.IntegerField(blank=True, null=True)),
                ('skill_1', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_2', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_3', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_4', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_5', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_6', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_7', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_8', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_9', models.CharField(blank=True, max_length=128, null=True)),
                ('skill_10', models.CharField(blank=True, max_length=128, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook', models.URLField(default='https://facebook.com/')),
                ('twitter', models.URLField(default='https://twitter.com/')),
                ('instagram', models.URLField(default='https://instagram.com/')),
                ('linkedin', models.URLField(default='https://linkedin.com/')),
                ('website', models.URLField(default='https://company.com/')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('signup_confirmation', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_1', models.CharField(blank=True, max_length=254, null=True)),
                ('service_2', models.CharField(blank=True, max_length=254, null=True)),
                ('service_3', models.CharField(blank=True, max_length=254, null=True)),
                ('service_4', models.CharField(blank=True, max_length=254, null=True)),
                ('service_5', models.CharField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Moderator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_of_expertise', models.CharField(max_length=200)),
                ('setup_by_admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setup_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Innovator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innovations_count', models.IntegerField(default=0)),
                ('upvotes_received', models.IntegerField(default=0)),
                ('downvotes_received', models.IntegerField(default=0)),
                ('reputation_score', models.IntegerField(default=0)),
                ('is_project_mgr', models.BooleanField(default=False)),
                ('is_investor', models.BooleanField(default=False)),
                ('services', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.service')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
